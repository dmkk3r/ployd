@using FluentValidation.Results
<form class="flex flex-col gap-4 h-full justify-between"
      hx-post="destinations/docker/create"
      hx-on:destination-created="create_docker_destination.close()">
    <div class="flex flex-col grow gap-3 text-white">
        <div class="flex flex-col gap-2">
            <label for="name">Name</label>
            <input id="name" name="name" class="input" value="@Name"/>
            <span class="text-red-500">
                @ValidationResult?.Errors.FirstOrDefault(r => r.PropertyName == "Name")?.ErrorMessage
            </span>
        </div>
        <div class="flex flex-col gap-2">
            <label for="endpoint">Endpoint</label>
            <div class="flex flex-row gap-2">
                <input id="endpoint" name="endpoint" class="input grow" value="@Endpoint"/>
                <button hx-post="/destinations/docker/test"
                        hx-vals="#endpoint"
                        hx-target="#docker-version-info"
                        class="button text-black">
                    <i class="ph ph-arrows-clockwise text-xl"></i>Check
                </button>
            </div>
            <span class="text-red-500">
                @ValidationResult?.Errors.FirstOrDefault(r => r.PropertyName == "Endpoint")?.ErrorMessage
            </span>
            <span id="docker-version-info">
            </span>
        </div>
    </div>
    <div class="flex flex-row-reverse items-end gap-2">
        <button type="submit" class="button">
            <i class="ph ph-plus text-xl"></i>Create
        </button>
    </div>
</form>

@code {
    [Parameter] public string? Name { get; set; }
    [Parameter] public string? Endpoint { get; set; }
    [Parameter] public string? Version { get; set; }
    [Parameter] public ValidationResult? ValidationResult { get; set; }
}
