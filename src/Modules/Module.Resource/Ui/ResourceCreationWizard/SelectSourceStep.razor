@using System.Diagnostics
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.DependencyInjection
@using Module.Source.Contract
@using Modules.Shared.Interfaces

<div class="flex flex-col gap-6 dark:text-white w-full h-full">
    <h1 class="text-lg font-semibold">Choose the source</h1>
    <div class="grid grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-4">
        <h2 class="text-md font-semibold col-span-2 md:col-span-3 xl:col-span-4">Git</h2>
        @foreach (var sourceType in SourceTypesUi.GitBased())
        {
            {
                var isChecked = SelectSourceStepForm?.SourceId == sourceType.Id;
                <StepPanel Id="@sourceType.Id" IdName="sourceId" Name="@sourceType.Name" Description="@sourceType.Description"
                           Icon="@sourceType.Icon" IsChecked="@isChecked"/>
            }
        }
        <h2 class="text-md font-semibold col-span-2 md:col-span-3 xl:col-span-4">Registry</h2>
        @foreach (var sourceType in SourceTypesUi.RegistryBased())
        {
            {
                var isChecked = SelectSourceStepForm?.SourceId == sourceType.Id;
                <StepPanel Id="@sourceType.Id" IdName="sourceId" Name="@sourceType.Name" Description="@sourceType.Description"
                           Icon="@sourceType.Icon" IsChecked="@isChecked"/>
            }
        }
    </div>
</div>

@code {
    [Inject] private IHttpContextAccessor HttpContextAccessor { get; set; } = null!;

    private SelectSourceStepForm? SelectSourceStepForm { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Debug.Assert(HttpContextAccessor.HttpContext != null, "HttpContextAccessor.HttpContext != null");
        var ploydWebStore = HttpContextAccessor.HttpContext.RequestServices.GetRequiredService<IPloydWebStore>();

        SelectSourceStepForm = await ploydWebStore
            .RetrieveAsync<SelectSourceStepForm>(nameof(SelectSourceStepForm));
    }

}
