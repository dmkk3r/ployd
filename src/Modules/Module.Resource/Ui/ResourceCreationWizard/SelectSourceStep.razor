@using System.Diagnostics
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.DependencyInjection
@using Module.Source.Contract
@using Modules.Shared.Interfaces

<div class="flex flex-col gap-6 dark:text-white w-full">
    <h1 class="text-lg font-semibold">Choose the source</h1>
    <div class="grid grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-4">
        @foreach (var sourceType in SourceTypes)
        {
            {
                var isChecked = SelectSourceStepForm?.SourceId == sourceType.Id;
                <label class="block cursor-pointer bg-surface-light rounded-lg">
                    <input type="radio" name="sourceId" value="@sourceType.Id" class="hidden peer"
                           checked="@isChecked"/>
                    <div
                        class="flex flex-col items-start p-4 gap-6 h-full peer-checked:bg-surface-lighter peer-checked:rounded-lg">
                        <img src="@sourceType.Icon" alt="@sourceType.Name"
                             class="h-10 object-scale-down"/>
                        <div class="flex flex-col gap-2">
                            <h2
                                class="font-semibold text-sm select-none truncate text-wrap">
                                @sourceType.Name
                            </h2>
                            <p
                                class="text-sm select-none truncate text-wrap">
                                @sourceType.Description
                            </p>
                        </div>
                    </div>
                </label>
            }
        }
    </div>
</div>

@code {
    [Inject] private IHttpContextAccessor HttpContextAccessor { get; set; } = null!;

    private SelectSourceStepForm? SelectSourceStepForm { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Debug.Assert(HttpContextAccessor.HttpContext != null, "HttpContextAccessor.HttpContext != null");
        var ploydWebStore = HttpContextAccessor.HttpContext.RequestServices.GetRequiredService<IPloydWebStore>();

        SelectSourceStepForm = await ploydWebStore
            .RetrieveAsync<SelectSourceStepForm>(nameof(SelectSourceStepForm));
    }

    private List<SourceTypeUi> SourceTypes =>
    [
        SourceTypesUi.Git,
        SourceTypesUi.GitHub,
        SourceTypesUi.GitLab,
        SourceTypesUi.DockerHub,
        SourceTypesUi.Ghcr,
    ];

}
