@using Modules.Ui
@using Modules.Ui.Layouts
@using Module.Resource.Ui.ResourcePanels

@layout RootLayout

<div class="flex flex-col gap-4 p-6 h-full">
    <h1 class="text-2xl dark:text-white font-semibold">Resources</h1>
    <div class="flex py-4 justify-end gap-2" hx-disinherit="*">
        <button class="button">
            <i class="ph ph-lego text-lg"></i>Template
        </button>
        <button class="button"
                hx-get="/resources/create"
                hx-target="#resource_creation_wizard-content"
                hx-on::after-request="resource_creation_wizard.showModal()">
            <i class="ph ph-code-block text-lg"></i>Custom
        </button>
    </div>
    @if (Resources.Count == 0)
    {
        <div class="h-full w-full flex items-center justify-center">
            <div class="dark:text-white rounded-lg flex flex-col gap-2 justify-center items-center">
                <h2
                    class="font-semibold text-xl">
                    You don't have any resources yet
                </h2>
                <p
                    class="text-md">
                    Create a new resource to get started
                </p>
            </div>
        </div>
    }
    else
    {
        <div id="resources"
             class="grid grid-flow-row grid-cols-4 gap-4"
             hx-get="/resources"
             hx-trigger="resource-creation-wizard-finished from:body"
             hx-select="#resources"
             hx-target="#resources"
             hx-swap="outerHTML">
            @foreach (var resource in Resources)
            {
                @switch (resource)
                {
                    case ContainerResource containerResource:
                        <ContainerResourcePanel ContainerResource="@containerResource"/>
                        break;
                    default:
                        <div class="dark:text-white bg-surface p-4 rounded-lg flex flex-col gap-2">
                            <p>Unknown resource type</p>
                        </div>
                        break;
                }
            }
        </div>
    }
</div>

<Sheet Id="resource_creation_wizard" Title="Create custom resource" Size="SheetSize.Large">
</Sheet>

@code {
    [Parameter] public IReadOnlyList<Resource> Resources { get; set; }
}
