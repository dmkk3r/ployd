<li>
    <details id="@Id" class="group" @attributes="@IsCurrentlyOpen()">
        <summary class="flex items-center justify-between cursor-pointer px-6 py-2 dark:text-white">
            <div class="flex items-center gap-3">
                @Icon
                <span class="">@Label</span>
            </div>
            <span class="group-open:rotate-180 transition-transform">
                <i class="ph ph-caret-down"></i>
            </span>
        </summary>
        <ul class="ml-[34px] space-y-1 border-l border-surface-light">
            @SidebarItems
        </ul>
    </details>
</li>

@code {
    [CascadingParameter] internal SidebarContext SidebarContext { get; set; } = default!;

    [Parameter] public required string Id { get; set; }
    [Parameter] public string? Label { get; set; }
    [Parameter] public RenderFragment? Icon { get; set; }
    [Parameter] public RenderFragment? SidebarItems { get; set; }

    private Dictionary<string, object> IsCurrentlyOpen()
    {
        return SidebarContext.CurrentOpenDetails.Contains(Id) ? new Dictionary<string, object> { { "open", "" } } : new();
    }

    private string IsCurrentPath(string? path)
    {
        return SidebarContext.CurrentPath == path ? "bg-secondary-50" : "";
    }

}
