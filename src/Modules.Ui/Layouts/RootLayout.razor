@using System.Reflection
@using Microsoft.AspNetCore.Http
@using Modules.Ui.Sidebar
@inherits LayoutComponentBase
@layout Modules.Ui.Index

<div class="flex flex-row w-full">
    <Sidebar HttpContext="HttpContextAccessor.HttpContext" CurrentPath="@CurrentPath">
        <SidebarHeader>
            <div class="flex flex-col px-6 py-4 dark:text-white">
                <div class="flex flex-row gap-4 items-center">
                    <i class="ph ph-rocket-launch text-3xl"></i>
                    <h2 class="text-2xl font-mono">ployd</h2>
                </div>
                <code class="text-xs items-end place-self-end">@_version</code>
            </div>
        </SidebarHeader>
        <SidebarItems>
            <SidebarItem Label="Overview" Href="/">
                <Icon>
                    <i class="ph ph-toolbox text-2xl"></i>
                </Icon>
            </SidebarItem>
            <SidebarCollapse Id="sources" Label="Sources">
                <Icon>
                    <i class="ph ph-box-arrow-up text-2xl"></i>
                </Icon>
                <SidebarItems>
                    <SidebarItem Label="Git" Href="/sources/git">
                        <Icon>
                            <img src="/logos/git.png" alt="git" class="h-5"/>
                        </Icon>
                    </SidebarItem>
                    <SidebarItem Label="GitHub" Href="/sources/github">
                        <Icon>
                            <img src="/logos/github.png" alt="github" class="h-5"/>
                        </Icon>
                    </SidebarItem>
                    <SidebarItem Label="GitLab" Href="/sources/gitlab">
                        <Icon>
                            <img src="/logos/gitlab.png" alt="gitlab" class="h-5"/>
                        </Icon>
                    </SidebarItem>
                </SidebarItems>
            </SidebarCollapse>
            <SidebarItem Label="Resources" Href="/resources">
                <Icon>
                    <i class="ph ph-package text-2xl"></i>
                </Icon>
            </SidebarItem>
            <SidebarCollapse Id="destinations" Label="Destinations">
                <Icon>
                    <i class="ph ph-box-arrow-down text-2xl"></i>
                </Icon>
                <SidebarItems>
                    <SidebarItem Label="Docker" Href="/destinations/docker">
                        <Icon>
                            <img src="/logos/docker.png" alt="git" class="h-5"/>
                        </Icon>
                    </SidebarItem>
                    <SidebarItem Label="Podman" Href="/destinations/podman">
                        <Icon>
                            <img src="/logos/podman.png" alt="podman" class="h-5"/>
                        </Icon>
                    </SidebarItem>
                    <SidebarItem Label="WebAssembly" Href="/destinations/webassembly">
                        <Icon>
                            <img src="/logos/webassembly.png" alt="webassembly" class="h-5"/>
                        </Icon>
                    </SidebarItem>
                </SidebarItems>
            </SidebarCollapse>
            <SidebarItem Label="Settings" Href="/settings">
                <Icon>
                    <i class="ph ph-gear text-2xl"></i>
                </Icon>
            </SidebarItem>
        </SidebarItems>
    </Sidebar>
    <div class="flex flex-col w-full h-screen overflow-y-auto">
        @Body
    </div>
</div>

@code
{
    [Inject] public required IHttpContextAccessor HttpContextAccessor { get; set; }
    private string CurrentPath => HttpContextAccessor.HttpContext?.Request.Path ?? "";

    private string? _version;

    protected override void OnInitialized()
    {
        var assembly = Assembly.GetEntryAssembly() ?? throw new InvalidOperationException("Entry assembly not found");
        _version = assembly.GetCustomAttribute<AssemblyInformationalVersionAttribute>() is { } attribute
            ? attribute.InformationalVersion[..13]
            : assembly.GetName().Version?.ToString();
    }
}
